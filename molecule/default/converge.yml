---
- name: Converge
  hosts: all
  gather_facts: false
  become: false

  pre_tasks:
    - name: Ensure Python 3 is present (bootstrap)
      ansible.builtin.raw: |
        test -e /usr/bin/python3 || \
        ( (command -v apt-get >/dev/null && apt-get update -y && apt-get install -y python3) || \
          (command -v dnf >/dev/null && dnf install -y python3) || \
          (command -v yum >/dev/null && yum install -y python3) )
      changed_when: false

    - name: Ensure 'pi' user exists
      ansible.builtin.user:
        name: pi
        shell: /bin/bash
        create_home: true

    - name: Ensure 'python' shim points to python3
      ansible.builtin.raw: |
        command -v python >/dev/null && exit 0
        if command -v apt-get >/dev/null; then
          apt-get update -y && apt-get install -y python-is-python3 || ln -sf /usr/bin/python3 /usr/bin/python
        elif command -v dnf >/dev/null || command -v yum >/dev/null; then
          (command -v dnf && dnf install -y python3) || (command -v yum && yum install -y python3)
          (command -v alternatives && alternatives --install /usr/bin/python python /usr/bin/python3 1) || ln -sf /usr/bin/python3 /usr/bin/python
        else
          ln -sf /usr/bin/python3 /usr/bin/python
        fi
      changed_when: false

    - name: Gather facts (after python available)
      ansible.builtin.setup:

    - name: Wait TCP 8069
      ansible.builtin.wait_for:
        host: odoo
        port: 8069
        delay: 5
        timeout: 420

    - name: Wait for Odoo web login to answer 200
      ansible.builtin.uri:
        url: http://odoo:8069/web/login
        status_code: 200
        return_content: false
      register: odoo_http
      retries: 30
      delay: 5
      until: odoo_http.status == 200

  tasks:
    - name: Include role under test (repo courant)
      ansible.builtin.include_role:
        name: "{{ lookup('env','MOLECULE_PROJECT_DIRECTORY') | basename }}"
